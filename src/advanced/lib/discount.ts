// Ìï†Ïù∏ ÌÉÄÏûÖ Ï†ïÏùò
export interface Discount {
  id: string;
  name: string;
  rate: number;
  description: string;
  icon?: string;
}

// Ìï†Ïù∏ Ï†ïÏ±Ö ÏÉÅÏàò
export const DISCOUNT_POLICIES = {
  BULK_THRESHOLD: 10, // Í∞úÎ≥Ñ ÏÉÅÌíà Ìï†Ïù∏ Í∏∞Ï§Ä ÏàòÎüâ
  TOTAL_BULK_THRESHOLD: 30, // Ï†ÑÏ≤¥ ÏàòÎüâ Ìï†Ïù∏ Í∏∞Ï§Ä
  TUESDAY_DISCOUNT_RATE: 0.1, // ÌôîÏöîÏùº Ìï†Ïù∏Ïú®
  LIGHTNING_SALE_RATE: 0.2, // Î≤àÍ∞úÏÑ∏Ïùº Ìï†Ïù∏Ïú®
  RECOMMENDATION_RATE: 0.05, // Ï∂îÏ≤úÌï†Ïù∏ Ìï†Ïù∏Ïú®
  TOTAL_BULK_RATE: 0.25, // Ï†ÑÏ≤¥ ÏàòÎüâ Ìï†Ïù∏Ïú®
  SUPER_SALE_RATE: 0.25, // SUPER SALE Ìï†Ïù∏Ïú® (Î≤àÍ∞úÏÑ∏Ïùº + Ï∂îÏ≤úÌï†Ïù∏)
} as const;

// Ìï†Ïù∏ Í≥ÑÏÇ∞ Í≤∞Í≥º
export interface DiscountResult {
  subtotal: number;
  appliedDiscounts: Discount[];
  finalAmount: number;
  discountAmount: number;
}

// Ìï†Ïù∏ ÏÉÅÌÉú Í¥ÄÎ¶¨
export interface DiscountState {
  lightningSale: {
    isActive: boolean;
    productId: string | null;
    startTime: number | null;
  };
  recommendation: {
    isActive: boolean;
    productId: string | null;
    startTime: number | null;
  };
}

// Í∞úÎ≥Ñ ÏÉÅÌíà Ìï†Ïù∏ Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùº)
export const calculateIndividualDiscount = (
  price: number,
  quantity: number,
  discountRate: number,
): number => {
  if (quantity >= DISCOUNT_POLICIES.BULK_THRESHOLD) {
    return price * quantity * discountRate;
  }
  return 0;
};

// Ï†ÑÏ≤¥ ÏàòÎüâ Ìï†Ïù∏ Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùº)
export const calculateTotalBulkDiscount = (subtotal: number, totalQuantity: number): number => {
  if (totalQuantity >= DISCOUNT_POLICIES.TOTAL_BULK_THRESHOLD) {
    return subtotal * DISCOUNT_POLICIES.TOTAL_BULK_RATE;
  }
  return 0;
};

// ÌôîÏöîÏùº Ìï†Ïù∏ Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùº)
export const calculateTuesdayDiscount = (amount: number): number => {
  const today = new Date();
  if (today.getDay() === 2) {
    // ÌôîÏöîÏùº (0=ÏùºÏöîÏùº, 1=ÏõîÏöîÏùº, 2=ÌôîÏöîÏùº)
    return amount * DISCOUNT_POLICIES.TUESDAY_DISCOUNT_RATE;
  }
  return 0;
};

// Î≤àÍ∞úÏÑ∏Ïùº Ìï†Ïù∏ Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùº)
export const calculateLightningSaleDiscount = (
  productId: string,
  price: number,
  quantity: number,
  lightningSaleProductId: string | null,
): number => {
  if (lightningSaleProductId === productId) {
    return price * quantity * DISCOUNT_POLICIES.LIGHTNING_SALE_RATE;
  }
  return 0;
};

// Ï∂îÏ≤úÌï†Ïù∏ Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùº)
export const calculateRecommendationDiscount = (
  productId: string,
  price: number,
  quantity: number,
  recommendationProductId: string | null,
): number => {
  if (recommendationProductId === productId) {
    return price * quantity * DISCOUNT_POLICIES.RECOMMENDATION_RATE;
  }
  return 0;
};

// Ìï†Ïù∏ Ï†ÅÏö© ÏàúÏÑú Î∞è ÏµúÏ¢Ö Í≥ÑÏÇ∞ (originalÍ≥º ÎèôÏùºÌïú ÏàúÏÑú)
export const calculateFinalDiscount = (
  subtotal: number,
  totalQuantity: number,
  individualDiscounts: number[],
  lightningSaleDiscount: number = 0,
  recommendationDiscount: number = 0,
): DiscountResult => {
  // 1. Í∞úÎ≥Ñ ÏÉÅÌíà Ìï†Ïù∏ Í≥ÑÏÇ∞
  const individualDiscountTotal = individualDiscounts.reduce((sum, discount) => sum + discount, 0);
  let currentAmount = subtotal - individualDiscountTotal;

  // 2. Ï†ÑÏ≤¥ ÏàòÎüâ Ìï†Ïù∏ Í≥ÑÏÇ∞ (30Í∞ú Ïù¥ÏÉÅ)
  if (totalQuantity >= DISCOUNT_POLICIES.TOTAL_BULK_THRESHOLD) {
    currentAmount = subtotal * (1 - DISCOUNT_POLICIES.TOTAL_BULK_RATE);
  }

  // 3. Î≤àÍ∞úÏÑ∏ÏùºÍ≥º Ï∂îÏ≤úÌï†Ïù∏ Í≥ÑÏÇ∞
  let specialDiscount = 0;
  const hasLightningSale = lightningSaleDiscount > 0;
  const hasRecommendation = recommendationDiscount > 0;

  if (hasLightningSale && hasRecommendation) {
    // SUPER SALE: 25% Ìï†Ïù∏
    specialDiscount = Math.max(lightningSaleDiscount, recommendationDiscount) * 1.25;
  } else {
    specialDiscount = lightningSaleDiscount + recommendationDiscount;
  }

  currentAmount -= specialDiscount;

  // 4. ÌôîÏöîÏùº Ìï†Ïù∏ Í≥ÑÏÇ∞ (ÎßàÏßÄÎßâÏóê Ï†ÅÏö©)
  const tuesdayDiscount = calculateTuesdayDiscount(currentAmount);
  currentAmount -= tuesdayDiscount;

  const finalAmount = currentAmount;
  const totalDiscount = subtotal - finalAmount;

  return {
    subtotal,
    appliedDiscounts: [], // Ïã§Ï†ú Ìï†Ïù∏ Í∞ùÏ≤¥Îäî Î≥ÑÎèÑÎ°ú Í¥ÄÎ¶¨
    finalAmount,
    discountAmount: totalDiscount,
  };
};

// Ìï†Ïù∏ ÏïÑÏù¥ÏΩò Î∞è Ïä§ÌÉÄÏùº Í∞ÄÏ†∏Ïò§Í∏∞ (originalÍ≥º ÎèôÏùº)
export const getDiscountStyle = (
  productId: string,
  lightningSaleProductId: string | null,
  recommendationProductId: string | null,
): { icon: string; className: string } => {
  const hasLightningSale = lightningSaleProductId === productId;
  const hasRecommendation = recommendationProductId === productId;
  const isSuperSale = hasLightningSale && hasRecommendation;

  if (isSuperSale) {
    return {
      icon: '‚ö°üíù',
      className: 'text-purple-600 font-bold',
    };
  } else if (hasLightningSale) {
    return {
      icon: '‚ö°',
      className: 'text-red-500 font-bold',
    };
  } else if (hasRecommendation) {
    return {
      icon: 'üíù',
      className: 'text-blue-500 font-bold',
    };
  }

  return {
    icon: '',
    className: '',
  };
};
