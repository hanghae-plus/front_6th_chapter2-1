/**
 * Products Feature - ÌÜµÌï© Î™®Îìà
 * ÏÉÅÌíà Îç∞Ïù¥ÌÑ∞ Í¥ÄÎ¶¨, UI Ï≤òÎ¶¨, ÌÖúÌîåÎ¶ø Í¥ÄÎ¶¨
 */

// Products constants
const PRODUCT_ONE = 'p1';
const PRODUCT_TWO = 'p2'; 
const PRODUCT_THREE = 'p3';
const PRODUCT_FOUR = 'p4';
const PRODUCT_FIVE = 'p5';

const INITIAL_PRODUCT_DATA = [
  { id: PRODUCT_ONE, name: 'Î≤ÑÍ∑∏ ÏóÜÏï†Îäî ÌÇ§Î≥¥Îìú', price: 10000, originalPrice: 10000, quantity: 50, onSale: false, suggestSale: false },
  { id: PRODUCT_TWO, name: 'ÏÉùÏÇ∞ÏÑ± Ìè≠Î∞ú ÎßàÏö∞Ïä§', price: 20000, originalPrice: 20000, quantity: 30, onSale: false, suggestSale: false },
  { id: PRODUCT_THREE, name: 'Í±∞Î∂ÅÎ™© ÌÉàÏ∂ú Î™®ÎãàÌÑ∞Ïïî', price: 30000, originalPrice: 30000, quantity: 20, onSale: false, suggestSale: false },
  { id: PRODUCT_FOUR, name: 'ÏóêÎü¨ Î∞©ÏßÄ ÎÖ∏Ìä∏Î∂Å ÌååÏö∞Ïπò', price: 15000, originalPrice: 15000, quantity: 0, onSale: false, suggestSale: false },
  { id: PRODUCT_FIVE, name: 'ÏΩîÎî©Ìï† Îïå Îì£Îäî Lo-Fi Ïä§ÌîºÏª§', price: 25000, originalPrice: 25000, quantity: 10, onSale: false, suggestSale: false }
];

const SUPER_SALE_TEXT = '25% SUPER SALE!';
const LIGHTNING_SALE_TEXT = '20% SALE!';
const SUGGESTION_SALE_TEXT = '5% Ï∂îÏ≤úÌï†Ïù∏!';

// ==================== Product Data Management ====================

/**
 * ÏÉÅÌíà Î™©Î°ùÏùÑ Ï¥àÍ∏∞ÌôîÌï©ÎãàÎã§
 * @returns {Array} Ï¥àÍ∏∞ÌôîÎêú ÏÉÅÌíà Î™©Î°ù
 */
export const initializeProducts = () => {
  return [...INITIAL_PRODUCT_DATA];
};

/**
 * ÏÉÅÌíà IDÎ°ú ÏÉÅÌíàÏùÑ Ï∞æÏäµÎãàÎã§
 * @param {string} productId - Ï∞æÏùÑ ÏÉÅÌíà ID
 * @param {Array} productList - ÏÉÅÌíà Î™©Î°ù
 * @returns {Object|undefined} Ï∞æÏùÄ ÏÉÅÌíà ÎòêÎäî undefined
 */
export const findProduct = (productId, productList) => {
  return productList.find(product => product.id === productId);
};

/**
 * Ïû¨Í≥†Í∞Ä Î∂ÄÏ°±Ìïú ÏÉÅÌíàÎì§ÏùÑ Ï∞æÏäµÎãàÎã§
 * @param {Array} productList - ÏÉÅÌíà Î™©Î°ù
 * @param {number} threshold - Ïû¨Í≥† Î∂ÄÏ°± Í∏∞Ï§Ä
 * @returns {Array} Ïû¨Í≥† Î∂ÄÏ°± ÏÉÅÌíà Î™©Î°ù
 */
export const getLowStockProducts = (productList, threshold) => {
  return productList.filter(product => 
    product.quantity > 0 && product.quantity < threshold
  );
};

/**
 * ÏÉÅÌíà IDÎ°ú ÏÉÅÌíàÏùÑ Ï∞æÏäµÎãàÎã§
 * @param {string} productId - Ï∞æÏùÑ ÏÉÅÌíà ID
 * @param {Array} productList - ÏÉÅÌíà Î™©Î°ù Î∞∞Ïó¥
 * @returns {Object|undefined} Ï∞æÏùÄ ÏÉÅÌíà Í∞ùÏ≤¥ ÎòêÎäî undefined
 */
export const findProductById = (productId, productList) => {
  return productList.find(product => product.id === productId);
};

// ==================== Product Options UI ====================

/**
 * ÏÉÅÌíà ÏòµÏÖòÏùò ÌëúÏãú Îç∞Ïù¥ÌÑ∞Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§
 * @param {Object} item - ÏÉÅÌíà Ï†ïÎ≥¥ Í∞ùÏ≤¥
 * @param {string} item.name - ÏÉÅÌíàÎ™Ö
 * @param {number} item.price - ÌòÑÏû¨ Í∞ÄÍ≤©
 * @param {number} item.originalPrice - ÏõêÎûò Í∞ÄÍ≤©
 * @param {number} item.quantity - Ïû¨Í≥† ÏàòÎüâ
 * @param {boolean} item.onSale - Î≤àÍ∞úÏÑ∏Ïùº Ïó¨Î∂Ä
 * @param {boolean} item.suggestSale - Ï∂îÏ≤úÌï†Ïù∏ Ïó¨Î∂Ä
 * @returns {Object} ÏòµÏÖò ÌëúÏãú Ï†ïÎ≥¥
 * @returns {string} returns.textContent - ÌëúÏãúÌï† ÌÖçÏä§Ìä∏
 * @returns {string} returns.className - CSS ÌÅ¥ÎûòÏä§Î™Ö
 * @returns {boolean} returns.disabled - ÎπÑÌôúÏÑ±Ìôî Ïó¨Î∂Ä
 */
export const getOptionData = (item) => {
  const discountText = (item.onSale ? " ‚ö°SALE" : "") + (item.suggestSale ? " üíùÏ∂îÏ≤ú" : "");
  
  // ÌíàÏ†àÏù∏ Í≤ΩÏö∞
  if (item.quantity === 0) {
    return {
      textContent: `${item.name} - ${item.price}Ïõê (ÌíàÏ†à)${discountText}`,
      className: "text-gray-400",
      disabled: true
    };
  }
  
  // Í≤ΩÏö∞Î≥Ñ Îß§Ìïë Í∞ùÏ≤¥
  const saleTypeMap = {
    bothSales: item.onSale && item.suggestSale,
    lightningOnly: item.onSale && !item.suggestSale, 
    suggestionOnly: !item.onSale && item.suggestSale,
    normal: !item.onSale && !item.suggestSale
  };
  
  const optionConfigs = {
    bothSales: {
      textContent: `‚ö°üíù${item.name} - ${item.originalPrice}Ïõê ‚Üí ${item.price}Ïõê (${SUPER_SALE_TEXT})`,
      className: "text-purple-600 font-bold",
      disabled: false
    },
    lightningOnly: {
      textContent: `‚ö°${item.name} - ${item.originalPrice}Ïõê ‚Üí ${item.price}Ïõê (${LIGHTNING_SALE_TEXT})`,
      className: "text-red-500 font-bold", 
      disabled: false
    },
    suggestionOnly: {
      textContent: `üíù${item.name} - ${item.originalPrice}Ïõê ‚Üí ${item.price}Ïõê (${SUGGESTION_SALE_TEXT})`,
      className: "text-blue-500 font-bold",
      disabled: false
    },
    normal: {
      textContent: `${item.name} - ${item.price}Ïõê${discountText}`,
      className: "",
      disabled: false
    }
  };
  
  // Ìï¥ÎãπÌïòÎäî Í≤ΩÏö∞ Ï∞æÍ∏∞
  const activeType = Object.keys(saleTypeMap).find(type => saleTypeMap[type]);
  return optionConfigs[activeType];
};

/**
 * Ïû•Î∞îÍµ¨Îãà ÎÇ¥ ÏÉÅÌíàÏùò ÌëúÏãú Ï†ïÎ≥¥Î•º ÏÉùÏÑ±Ìï©ÎãàÎã§
 * @param {Object} product - ÏÉÅÌíà Ï†ïÎ≥¥ Í∞ùÏ≤¥
 * @param {string} product.name - ÏÉÅÌíàÎ™Ö
 * @param {number} product.price - ÌòÑÏû¨ Í∞ÄÍ≤©
 * @param {number} product.originalPrice - ÏõêÎûò Í∞ÄÍ≤©
 * @param {boolean} product.onSale - Î≤àÍ∞úÏÑ∏Ïùº Ïó¨Î∂Ä
 * @param {boolean} product.suggestSale - Ï∂îÏ≤úÌï†Ïù∏ Ïó¨Î∂Ä
 * @returns {Object} ÌëúÏãú Ï†ïÎ≥¥
 * @returns {string} returns.priceHtml - Í∞ÄÍ≤© HTML
 * @returns {string} returns.nameText - Ïù¥Î¶Ñ ÌÖçÏä§Ìä∏
 */
export const getProductDisplayInfo = (product) => {
  const hasBothSales = product.onSale && product.suggestSale;
  const hasLightningSale = product.onSale && !product.suggestSale;
  const hasSuggestionSale = !product.onSale && product.suggestSale;
  
  if (hasBothSales) {
    return {
      priceHtml: `<span class="line-through text-gray-400">‚Ç©${product.originalPrice.toLocaleString()}</span> <span class="text-purple-600">‚Ç©${product.price.toLocaleString()}</span>`,
      nameText: "‚ö°üíù" + product.name
    };
  }
  
  if (hasLightningSale) {
    return {
      priceHtml: `<span class="line-through text-gray-400">‚Ç©${product.originalPrice.toLocaleString()}</span> <span class="text-red-500">‚Ç©${product.price.toLocaleString()}</span>`,
      nameText: "‚ö°" + product.name
    };
  }
  
  if (hasSuggestionSale) {
    return {
      priceHtml: `<span class="line-through text-gray-400">‚Ç©${product.originalPrice.toLocaleString()}</span> <span class="text-blue-500">‚Ç©${product.price.toLocaleString()}</span>`,
      nameText: "üíù" + product.name
    };
  }
  
  return {
    priceHtml: `‚Ç©${product.price.toLocaleString()}`,
    nameText: product.name
  };
};

/**
 * product select optionsÎ•º ÏóÖÎç∞Ïù¥Ìä∏Ìï©ÎãàÎã§
 * @param {Array} productList - ÏÉÅÌíà Î™©Î°ù
 * @param {Element} productSelectElement - select DOM element
 * @param {Function} createElement - DOM element ÏÉùÏÑ± Ìï®Ïàò
 * @param {number} totalStockWarningThreshold - Ïû¨Í≥† Í≤ΩÍ≥† ÏûÑÍ≥ÑÍ∞í
 */
export const updateSelectOptions = (productList, productSelectElement, createElement, totalStockWarningThreshold) => {
  const totalStock = productList.reduce((sum, product) => sum + product.quantity, 0);

  const options = productList.map(item => {
    const optionData = getOptionData(item);
    return createElement("option", {
      value: item.id,
      textContent: optionData.textContent,
      className: optionData.className,
      disabled: optionData.disabled
    });
  });

  productSelectElement.replaceChildren(...options);
  productSelectElement.style.borderColor = totalStock < totalStockWarningThreshold ? "orange" : "";
};

// ==================== Product Templates ====================

/**
 * ÏÉÅÌíà ÏÑ†ÌÉùÍ∏∞ ÌÖúÌîåÎ¶ø
 */
export const productSelectorTemplate = `
  <div class="bg-white border border-gray-200 p-8 overflow-y-auto">
    <div class="mb-6 pb-6 border-b border-gray-200">
      <select id="product-select" class="w-full p-3 border border-gray-300 rounded-lg text-base mb-3">
        <!-- Options will be populated by JavaScript -->
      </select>
      <button id="add-to-cart" class="w-full py-3 bg-black text-white text-sm font-medium uppercase tracking-wider hover:bg-gray-800 transition-all">
        Add to Cart
      </button>
      <div id="stock-status" class="text-xs text-red-500 mt-3 whitespace-pre-line">
        <!-- Stock information will be populated by JavaScript -->
      </div>
    </div>
    <div id="cart-items">
      <!-- Cart items will be populated by JavaScript -->
    </div>
  </div>
`; 